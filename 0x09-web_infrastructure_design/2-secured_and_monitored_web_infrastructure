Explanation of Infrastructure:
For Every Additional Element, Why You Are Adding It:

Load Balancer (HAproxy):
Reason: To distribute incoming traffic across multiple servers to ensure no single server becomes a bottleneck.
Web Servers (Nginx):
Reason: To handle HTTP requests and serve static content.
Application Servers:
Reason: To process dynamic content and execute application logic.
Database (MySQL):
Primary Database on Server 1: To handle write operations and serve as the main data store.
Replicated Databases on Server 2 and Server 3: To handle read operations and provide redundancy.
Firewalls:
Reason: To protect each server from unauthorized access and potential attacks by filtering incoming and outgoing traffic.
Monitoring Clients:
Reason: To collect and analyze performance data, detect issues, and ensure the health and availability of the infrastructure.
SSL Certificate:
Reason: To encrypt data transmitted between the client and the server, ensuring secure communication.
Load Balancer Configuration:

Distribution Algorithm: Round-robin.
How it works: The load balancer distributes client requests sequentially across all servers.
Active-Active vs. Active-Passive Setup:

Active-Active: Both servers handle traffic simultaneously, improving resource utilization and redundancy.
Active-Passive: One server handles traffic while the other is on standby, taking over only if the active server fails.
This setup uses Active-Active for the web and application servers, and a Primary-Replica setup for the database.
Database Primary-Replica (Master-Slave) Cluster:

How it works: The Primary (Master) node on Server 1 handles write operations and replicates data to the Replica (Slave) nodes on Server 2 and Server 3, which handle read operations.
Difference between Primary and Replica nodes:
Primary node: Handles both read and write operations.
Replica nodes: Handle read operations only, receiving updates from the Primary node.
